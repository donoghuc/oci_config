# frozen_string_literal: true

#
# See the file "LICENSE" for the full license governing this code.
#
# This code is generated by the type generator. Modification will be overwritten
#
require 'puppet_x/enterprisemodules/oci/core'

Puppet::Type.newtype(:<%= type %>) do
  include Puppet_X::EnterpriseModules::Oci::Type
<% if @data[type]['desc'] -%>
  desc <<-DESC
  <%= @data[type]['desc'] -%>
<% if @data[type]['example'] -%>


  <%= @data[type]['example'] -%>
<% end -%>


  This documentation is generated from the [Ruby OCI SDK](https://github.com/oracle/oci-ruby-sdk).

  DESC
<% end -%>

  add_title_attributes(:<%= object_type %>_name)
<% if @data[type]['includes'] -%>
  #
  # The include files contain specific non-generated code for the types
  #
<% @data[type]['includes'].each do | include_file| -%>
  include_file "puppet/type/#{name}/<%= include_file %>", binding
<% end -%>
<% end -%>

  ensurable

  parameter :name
  parameter :<%= object_type %>_name
  parameter :tenant
  parameter :oci_timeout
  parameter :oci_wait_interval
  parameter :present_states
  parameter :absent_states
  parameter :synchronized
  parameter :compartment
  property  :id
  property  :compartment_id

<% @data[type]['properties'].each do | property| -%>
<% next if ['name', 'display_name', 'compartment_id', 'id'].include?(property.first) -%>
<% next if property[1]['skip'] -%>
<% next if property[1]['deprecated'] -%>
<% if extra_property = property.first.scan(/(.*)_id(s)?$/).first&.join -%>
  property :<%= extra_property %>
<% end -%>
  property :<%= property.first %>
<% end -%>

  validate do
<% reference_properties(type).each do | property| -%>
    validate_reference_propery(:<%= property %>, self)
<% end -%>
  end
end
