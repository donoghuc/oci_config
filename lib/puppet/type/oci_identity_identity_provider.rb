# frozen_string_literal: true

#
# See the file "LICENSE" for the full license governing this code.
#
# This code is generated by the type generator. Modification will be overwritten
#
require 'puppet_x/enterprisemodules/oci/core'

Puppet::Type.newtype(:oci_identity_identity_provider) do
  include Puppet_X::EnterpriseModules::Oci::Type
  desc <<-DESC
  The resulting base object when you add an identity provider to your tenancy. A
{Saml2IdentityProvider}
is a specific type of `IdentityProvider` that supports the SAML 2.0 protocol. Each
`IdentityProvider` object has its own OCID. For more information, see
[Identity Providers and Federation](https://docs.cloud.oracle.com/Content/Identity/Concepts/federation.htm).

To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
talk to an administrator. If you're an administrator who needs to write policies to give users access,
see [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

**Warning:** Oracle recommends that you avoid using any confidential information when you supply string
values using the API.

This class has direct subclasses. If you are using this class as input to a service operations then you should favor using a subclass over the base class

  Here is an example on how to use this:

    oci_identity_provider { 'tenant (root)/my_provider':
      ensure          => 'present',
      description     => 'my own provider',
    }

  This documentation is generated from the [Ruby OCI SDK](https://github.com/oracle/oci-ruby-sdk).

  DESC

  add_title_attributes(:identity_provider_name)

  ensurable

  parameter :name
  parameter :identity_provider_name
  parameter :tenant
  parameter :oci_timeout
  parameter :oci_wait_interval
  parameter :present_states
  parameter :absent_states
  parameter :synchronized
  parameter :compartment
  property  :id
  property  :compartment_id

  property :description
  property :product_type
  property :time_created
  property :lifecycle_state
  property :inactive_status
  property :protocol
  property :freeform_tags
  property :defined_tags

  validate do
    validate_reference_propery(:compartment_id, self)
  end
end
