# frozen_string_literal: true

#
# See the file "LICENSE" for the full license governing this code.
#
# This code is generated by the type generator. Modification will be overwritten
#
newproperty(:ipv6_cidr_block, :parent => Puppet_X::EnterpriseModules::Oci::Property) do
  desc <<-DESC
  If you enable IPv6 for the VCN (see `isIpv6Enabled`), you may optionally provide an IPv6
/48 CIDR block from the supported ranges (see [IPv6 Addresses](https://docs.cloud.oracle.com/Content/Network/Concepts/ipv6.htm).
The addresses in this block will be considered private and cannot be accessed
from the internet. The documentation refers to this as a *custom CIDR* for the VCN.

If you don't provide a custom CIDR for the VCN, Oracle assigns the VCN's IPv6 /48 CIDR block.

Regardless of whether you or Oracle assigns the `ipv6CidrBlock`,
Oracle *also* assigns the VCN an IPv6 CIDR block for the VCN's public IP address space
(see the `ipv6PublicCidrBlock` of the {Vcn} object). If you do
not assign a custom CIDR, Oracle uses the *same* Oracle-assigned CIDR for both the private
IP address space (`ipv6CidrBlock` in the `Vcn` object) and the public IP addreses space
(`ipv6PublicCidrBlock` in the `Vcn` object). This means that a given VNIC might use the same
IPv6 IP address for both private and public (internet) communication. You control whether
an IPv6 address can be used for internet communication by using the `isInternetAccessAllowed`
attribute in the {Ipv6} object.

For important details about IPv6 addressing in a VCN, see [IPv6 Addresses](https://docs.cloud.oracle.com/Content/Network/Concepts/ipv6.htm).

Example: `2001:0db8:0123::/48`

  This documentation is generated from the [Ruby OCI SDK](https://github.com/oracle/oci-ruby-sdk).
  DESC
  data_type('Optional[String]')
end
